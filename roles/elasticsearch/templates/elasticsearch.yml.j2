# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: "{{ es_cluster_name }}"
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: "{{ ansible_hostname }}"

{% if 'masters' in group_names %}
node.master: true
node.data: false
{% elif 'workers' in group_names %}
node.data: true
node.master: false
http.enabled: false
{% else %}
node.data: false
node.master: false
{% endif %}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
{% if 'workers' in group_names %}
path.data: "{{ es_data_dir }}"
{% else %}
#path.data:  /path/to/data
{% endif %}

# Path to log files:
#
#path.logs: /path/to/logs
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
{% if 'client' in group_names %}
network.host: {{ client_ip }}
{% else %}
network.host: {{ host_ip }}
{% endif %}
#
# Set a custom port for HTTP:
#
http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.zen.ping.unicast.hosts: ["usa-masternode1","usa-masternode2","usa-masternode3","usa-workernode1","usa-workernode2","usa-workernode3","usa-workernode4","usa-workernode5","usa-client"]

# ["{{groups['all']|join(',')}}"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
discovery.zen.minimum_master_nodes: "{{ es_minimum_master_nodes }}"
#discovery.zen.ping_timeout: 5m


# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
gateway.recover_after_nodes: "{{ es_gateway_recover_after_nodes }}"
gateway.expected_nodes: "{{ es_gateway_expected_nodes }}"
gateway.recover_after_time: "{{ es_gateway_recover_after_time }}"

#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
{% if 'client' in group_names %}
http.cors.enabled: true
http.cors.allow-origin: /http://{{ client_ip }}(:[0-9]+)?/
#Allow CORS only from the Client Machine
# Output Example /http://172.20.20.11(:[0-9]+)?/
http.cors.allow-methods : OPTIONS, HEAD, GET, POST, PUT, DELETE
http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type, Content-Length
{% endif %}
# This  configuration is considered as a security risk as your cluster is open to cross origin from anywhere. This needs to be fixed ASAP. (Consider a value like /https?:\/\/localhost(:[0-9]+)?/)
{# http.cors.allow-headers: Authorization #}

# X Pack
{# action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*
xpack.security.enabled: true
xpack.graph.enabled: true
xpack.ml.enabled: true
xpack.monitoring.enabled: true
xpack.watcher.enabled: true
xpack.security.authc.accept_default_password: true #}
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true
